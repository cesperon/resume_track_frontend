{"remainingRequest":"/Users/cesperon/Desktop/rt_front/rt_front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cesperon/Desktop/rt_front/rt_front_end/src/components/Login.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/cesperon/Desktop/rt_front/rt_front_end/src/components/Login.vue","mtime":1632220194688},{"path":"/Users/cesperon/Desktop/rt_front/rt_front_end/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cesperon/Desktop/rt_front/rt_front_end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/cesperon/Desktop/rt_front/rt_front_end/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/cesperon/Desktop/rt_front/rt_front_end/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cesperon/Desktop/rt_front/rt_front_end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cesperon/Desktop/rt_front/rt_front_end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKc2VjdGlvbnsKICBiYWNrZ3JvdW5kOndoaXRlOwogIGJvcmRlcjoxcHggc29saWQgYmxhY2s7CiAgcGFkZGluZzoyMHB4IDIwcHggMjBweCAyMHB4OwogIGJveC1zaGFkb3c6IDFweCAxcHggMXB4IGdyZXk7CiAgYm9yZGVyLXJhZGl1czo1cHg7CiAgd2lkdGg6MzUwcHg7CiAgaGVpZ2h0OjMwMHB4Owp9Ci5wYXNzd29yZHsKICBwYWRkaW5nLWJvdHRvbToxMHB4Owp9Ci5sb2dpbnsKICBmb250LXNpemU6MjBweDsKICBib3JkZXI6MXB4IHNvbGlkIGJsYWNrOwogIHBhZGRpbmc6MCAxMjBweCAwIDEyMHB4OwogIGJhY2tncm91bmQ6ICRncmVlbjsKfQpidG57CiAgYmFja2dyb3VuZDokd2hpdGU7CiAgcGFkZGluZzo1cHggMjBweCA1cHggMjBweDsKICBib3JkZXI6MXB4IHNvbGlkIGJsYWNrOwogIGJvcmRlci1yYWRpdXM6NXB4OwogIGNvbG9yOmJsYWNrOwp9CmJyewogIGJveC1zaGFkb3c6IDVweCAxMHB4Owp9Ci5pbnB1dHsKICB3aWR0aDozMDBweDsKICBoZWlnaHQ6NDBweDsKfQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n      <section class=\"form text-center justify-content-center\">\n\n        <div class=\"field\">\n          <div class=\"control\">\n            <input v-model=\"email\" class=\"input\" type=\"text\" placeholder=\"Email\">\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"control password\">\n            <input v-model=\"password\" class=\"input\" type=\"password\" placeholder=\"Password\">\n          </div>\n        </div>\n\n        <a class =\"login\" href=\"#\" v-on:click=\"submit\">Log In</a>\n        <br>\n        <a>forgot password?</a>\n        <br>\n\n        <btn>create new account</btn>\n        <!-- <a v-on:click=\"googleSignIn\">Google Sign In</a> -->\n      </section>\n</template>\n\n<script>\nconst axios = require('axios').default;\nimport router from \"../router\";\n// import './axios'\nexport default {\n  name: 'Login',\n  components: {\n  },\n\n  data() {\n    return {\n      email: '',\n      password: '',\n      userDetails: null,\n    };\n  },\n  methods: {\n    async submit() {\n      let that = this\n      let mydata = {\n        \"email\": this.email,\n        \"password\":this.password\n      }\n      let res = await axios.post('signin', mydata, { withCredentials: true });\n      this.userDetails = res.data\n      // console.log(this.userDetails);\n      if(res.data.status == true){\n        router.push({name:'Dashboard', params: {user: res.data.data} });\n      }\n    },\n\n    async googleSignIn() {\n\n      let res = await axios.get('google');\n\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\nsection{\n  background:white;\n  border:1px solid black;\n  padding:20px 20px 20px 20px;\n  box-shadow: 1px 1px 1px grey;\n  border-radius:5px;\n  width:350px;\n  height:300px;\n}\n.password{\n  padding-bottom:10px;\n}\n.login{\n  font-size:20px;\n  border:1px solid black;\n  padding:0 120px 0 120px;\n  background: $green;\n}\nbtn{\n  background:$white;\n  padding:5px 20px 5px 20px;\n  border:1px solid black;\n  border-radius:5px;\n  color:black;\n}\nbr{\n  box-shadow: 5px 10px;\n}\n.input{\n  width:300px;\n  height:40px;\n}\n</style>\n"]}]}